---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus-k8s
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    prometheus.io/port2: '9091'
  name: prometheus-k8s
  namespace: kube-system
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: prometheus
    nodePort: 32387
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: sidecar
    nodePort: 30182
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: prometheus
    prometheus: k8s
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-k8s
  namespace: kube-system
  labels:
    app: prometheus
    prometheus: k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      prometheus: k8s
  template:
    metadata:
      labels:
        app: prometheus
        prometheus: k8s
    spec:
      serviceAccount: prometheus
      securityContext:
        runAsUser: 0
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2.6.0
        imagePullPolicy: Always
        args:
        - "--config.file=/etc/prometheus/config/prometheus.yaml"
        - "--storage.tsdb.path=/data"
        - "--storage.tsdb.min-block-duration=15m"
        - "--storage.tsdb.max-block-duration=4h"
        - "--storage.tsdb.retention=48h"
        ports:
        - name: prometheus
          containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/config
        - name: data-volume
          mountPath: /data
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-k8s
      - name: data-volume
        emptyDir: {}
      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-k8s
  namespace: kube-system
data:
  prometheus.yaml: |
    scrape_configs:
    - job_name: 'kubernetes-pods'
      scrape_interval: 30s
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: (.*-metrics)
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: replace
          target_label: kubernetes_container_name
        - source_labels: [__meta_kubernetes_pod_host_ip]
          action: replace
          target_label: kubernetes_pod_host_ip
        - source_labels: [__meta_kubernetes_pod_label_name]
          action: replace
          target_label: app

    - job_name: 'kubernetes-services'
      scrape_interval: 30s
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: replace
          target_label: kubernetes_container_name
        - source_labels: [__meta_kubernetes_pod_host_ip]
          action: replace
          target_label: kubernetes_pod_host_ip
        - source_labels: [__meta_kubernetes_pod_label_name]
          action: replace
          target_label: app
