---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      opencensus:
      prometheus:
          config:
              scrape_configs:
              - job_name: 'kubernetes-pods'
                scrape_interval: 30s

                kubernetes_sd_configs:
                - role: pod

                relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_container_port_name]
                    action: keep
                    regex: (.*-metrics)

                 # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                 #   action: keep
                 #   regex: true
                 #
                 # - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                 #   action: replace
                 #   target_label: __scheme__
                 #   regex: (https?)
                 #
                 # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                 #   action: replace
                 #   target_label: __metrics_path__
                 #   regex: (.+)
                 #
                 # - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                 #   action: replace
                 #   regex: ([^:]+)(?::\d+)?;(\d+)
                 #   replacement: $1:$2
                 #   target_label: __address__
                 #
                 # - action: labelmap
                 #   regex: __meta_kubernetes_pod_label_(.+)
                 #
                 # - source_labels: [__meta_kubernetes_namespace]
                 #   action: replace
                 #   target_label: kubernetes_namespace
                 #
                 # - source_labels: [__meta_kubernetes_pod_name]
                 #   action: replace
                 #   target_label: kubernetes_pod_name
    processors:
      batch:
      memory_limiter:
        ballast_size_mib: 350 # Same as --mem-ballast-size-mib CLI argument
        limit_mib: 850        # 80% of maximum memory up to 2G
        spike_limit_mib: 512  # 25% of limit up to 2G
        check_interval: 5s
      queued_retry:
      filter:
        metrics:
          include:
            match_type: regexp
            metric_names:
              - otelcol_.*
              - demo_app_.*
              - hello_requests_otagent
              - custom_metric_example
      # tail_sampling:
      #   decision_wait: 5s
      #   num_traces: 50000 # number of traces kept in memory
      #   policies:
      #     - name: all-traces
      #       type: rate_limiting
      #       rate_limiting:
      #         spans_per_seconds: 10
    exporters:
      logging:
        loglevel: info
      stackdriver:
    extensions:
      health_check:
    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [opencensus]
          processors: [memory_limiter, batch, queued_retry]
          exporters: [logging, stackdriver]
        metrics:
          receivers: [opencensus, prometheus]
          processors: [memory_limiter, filter]
          exporters: [logging, stackdriver]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
  - name: opencensus
    port: 55678
    targetPort: 55678

  - name: otel-metrics
    port: 8888

  selector:
    component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 #TODO - adjust this to your own requirements
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - command:
          - "/otelcontribcol"
          - "--config=/conf/otel-collector-config.yaml"
          - "--mem-ballast-size-mib=350"
        image: otel/opentelemetry-collector-contrib:0.6.0
        name: otel-collector
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 200Mi
        ports:
        - name: otel-metrics
          containerPort: 8888

        - name: opencensus
          containerPort: 55678

        - name: opentelemetry
          containerPort: 55680

        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
#        - name: otel-collector-secrets
#          mountPath: /secrets
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-rbac
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
