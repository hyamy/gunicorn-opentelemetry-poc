apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: flask-app-tutorial
  labels:
    name: flask-app-tutorial
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flask-app-tutorial
  template:
    metadata:
      name: flask-app-tutorial
      labels:
        name: flask-app-tutorial
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'
        prometheus.io/path: '/metrics'
    spec:
      containers:
        - name: flask-app-tutorial
          image: gcr.io/rnm-datadog-sd/flask-app:v1.1.8-otagent
          ports:
            - containerPort: 8080
            - containerPort: 55678
          resources:
            requests:
              memory: 256Mi
            limits:
              memory: 512Mi
          env:
            - name: DEBUG_MODE
              value: "1"

            - name: OTEL_AGENT_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP

            - name: OTEL_AGENT_ENDPOINT
              value: $(OTEL_AGENT_HOST):55678

        - name: statsd-exporter
          image: prom/statsd-exporter
          args: ["--log.level=debug"]
          imagePullPolicy: Always
          ports:
          - containerPort: 9102
          - containerPort: 9125
            protocol: UDP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: flask-app-tutorial
  name: flask-app-tutorial
  namespace: default
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: app
    nodePort: 32424
    protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    name: flask-app-tutorial
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: statsd-exporter
  name: statsd-exporter
  namespace: default
spec:
  ports:
    - name: statsd-metrics
      protocol: TCP
      port: 9102
      targetPort: 9102
  selector:
    name: flask-app-tutorial
  sessionAffinity: None
